'unemp',
'savings',
'suicide24_sa',
'suicide25_sa',
'ment24_sa',
'ment25_sa')
# test for stationarity
stationarity_stats_1 <- test_station(ts_final_data, stationarity_vars)
nvar <- nrow(stationarity_stats_1)
nobs <- nrow(ts_final_data)
# remove the first variable because we adjusted for seasonality
final_data_3 <- final_data_3 %>%
filter(month_end!=ymd('1999-01-31'))
#######################################################################
# Adjust for stationarity
for(i in 1:nvar){
# If all four tests say that the data is stationary, don't adjust
if(stationarity_stats_1[i,'total_stationary']<4) {
new_name <- paste(stationarity_vars[i],'_station',sep='')
# grab the indicator of if the log adjustment is needed
log <- as.numeric(clean_names %>% filter(var_name==new_name) %>% dplyr::select(log))
if(log==1){
final_data_3 <- final_data_3 %>%
mutate(!!new_name:=diff(log(ts_final_data[,stationarity_vars[i]])))
} else{
final_data_3 <- final_data_3 %>%
mutate(!!new_name:=diff(ts_final_data[,stationarity_vars[i]]))
}
}
}
#######################################################################
# Test after stationarity adjustment
stationarity_vars <- c('gen24_station',
'gen25_station',
'divorced_station',
'apple_station',
'atandt_station',
'verizon_station',
'unemp_station',
'savings_station',
'suicide24_sa_station',
'suicide25_sa_station',
'ment24_sa_station',
'ment25_sa_station')
ts_final_data <- ts(final_data_3, start=c(1999,2), frequency=12)
# test variables again
stationarity_stats_2 <- test_station(ts_final_data, stationarity_vars)
# join the before and after stationarity adjustments into one table
final_stationarity <- stationarity_stats_1 %>%
mutate(join_name = gsub('_sa','',stationarity_vars)) %>%
left_join(stationarity_stats_2 %>%
mutate(join_name = gsub('_sa_station','',stationarity_vars),
join_name = gsub('_station','', join_name)), by='join_name', suffix=c('', '_station'))
# create a pretty table of the stationary test results
# the alpha for the shading of the cells in the table
alpha_1 <- 0.4
pretty_stationary <- final_stationarity %>%
left_join(clean_names, by=c('stationarity_vars'='var_name')) %>%
dplyr::arrange(order) %>%
dplyr::select(clean_name,
df_testStat,
pp_testStat,
adfgls_testStat,
kpss_testStat,
df_result:kpss_result,
df_testStat_station,
pp_testStat_station,
adfgls_testStat_station,
kpss_testStat_station,
df_result_station:kpss_result_station) %>%
mutate_if(is.numeric,~round(.,4)) %>%
gt(rowname_col = 'clean_name') %>%
tab_header(title = html('<b>Unit Root Tests</b>')) %>%
tab_row_group(
group = html('Age Specific Variables'),
rows = 1:6
) %>%
tab_row_group(
group = html('Common Variables'),
rows = 7:12
) %>%
row_group_order(
groups = c('Age Specific Variables', 'Common Variables')
)  %>%
tab_spanner(
label = 'Non-adjusted',
columns = c('df_testStat', 'pp_testStat', 'adfgls_testStat', 'kpss_testStat')
) %>%
tab_spanner(
label = 'Adjusted',
columns = c('df_testStat_station', 'pp_testStat_station', 'adfgls_testStat_station', 'kpss_testStat_station')
)  %>%
tab_style(
style = cell_fill(color = "lightgray", alpha=alpha_1),
locations = cells_body(
columns = 'df_testStat',
rows = df_result==0)
) %>%
tab_style(
style = cell_fill(color = "lightgray", alpha=alpha_1),
locations = cells_body(
columns = 'pp_testStat',
rows = pp_result==0)
) %>%
tab_style(
style = cell_fill(color = "lightgray", alpha=alpha_1),
locations = cells_body(
columns = 'adfgls_testStat',
rows = adfgls_result==0)
) %>%
tab_style(
style = cell_fill(color = "lightgray", alpha=alpha_1),
locations = cells_body(
columns = 'kpss_testStat',
rows = kpss_result==0)
) %>%
tab_style(
style = cell_fill(color = "lightgray", alpha=alpha_1),
locations = cells_body(
columns = 'df_testStat_station',
rows = df_result_station==0)
) %>%
tab_style(
style = cell_fill(color = "lightgray", alpha=alpha_1),
locations = cells_body(
columns = 'pp_testStat_station',
rows = pp_result_station==0)
) %>%
tab_style(
style = cell_fill(color = "lightgray", alpha=alpha_1),
locations = cells_body(
columns = 'adfgls_testStat_station',
rows = adfgls_result_station==0)
) %>%
tab_style(
style = cell_fill(color = "lightgray", alpha=alpha_1),
locations = cells_body(
columns = 'kpss_testStat_station',
rows = kpss_result_station==0)
) %>%
cols_label(
df_testStat = 'ADF',
pp_testStat = 'PP',
adfgls_testStat = 'ERS',
kpss_testStat = 'KPSS',
df_testStat_station = 'ADF',
pp_testStat_station = 'PP',
adfgls_testStat_station = 'ERS',
kpss_testStat_station = 'KPSS') %>%
cols_hide(columns=c('df_result',
'pp_result',
'adfgls_result',
'kpss_result',
'df_result_station',
'pp_result_station',
'adfgls_result_station',
'kpss_result_station'))
gt::gtsave(pretty_stationary ,here('Plots', 'stationarity_test_results.png'))
#######################################################################
# Graph variables after stationarity adjustments
common_vars <- c('apple_station', 'atandt_station', 'verizon_station', 'divorced_station', 'savings_station', 'unemp_station')
age_vars <- c('gen24_station', 'ment24_sa_station', 'suicide24_sa_station', 'gen25_station', 'ment25_sa_station', 'suicide25_sa_station')
temp_list <- graph_vars(final_data_3, common_vars, clean_names, dollars, percents, main_theme)
grid <- grid.arrange(grobs=temp_list, nrow=2,top='')
ggsave(here('Plots', 'common_variables_stationary.png'),plot=grid,dpi=300, width = 17, height = 8, units='in')
temp_list <- graph_vars(final_data_3, age_vars, clean_names, dollars, percents, main_theme)
grid <- grid.arrange(grobs=temp_list, nrow=2,top='')
ggsave(here('Plots', 'age_variables_stationary.png'),plot=grid,dpi=300, width = 17, height = 8, units='in')
#######################################################################
# Create and graph VAR models
main_theme <- theme(panel.grid = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size=12),
plot.subtitle = element_text(size=8),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8),
axis.text.x = element_text(size=8),
axis.text.y = element_text(size=8))
runs <- 10
out_months <- 18
dpi <- 300
height <- 5
width <- 17
#################################################################
# Age 24 and Below (Adolescents)
# Following creates the irf for combination of variables and responses listed below
# General Health, Mental Health and Suicides for 24 and Below
var_models(final_data_3,
c('gen24_station', 'ment24_sa_station'),
out_months = out_months,
response = 'suicide24_sa_station',
runs=runs,
against_self=T,
clean=clean_names,
theme=main_theme,
n_row = 1,
title = 'Response of Suicides Per Thousand Adolescents to Various Shocks',
file_name = 'age24only_VAR.png',
dpi = dpi,
width = width,
height = height,
layout=NULL)
# Mental Health, General Health and Suicides for 24 and Below
var_models(final_data_3,
c('ment24_sa_station', 'gen24_station'),
out_months = out_months,
response = 'suicide24_sa_station',
runs=runs,
against_self=T,
clean=clean_names,
theme=main_theme,
n_row = 1,
title = 'Response of Suicides Per Thousand Adolescents to Various Shocks',
file_name = 'age24only_reverse_VAR.png',
dpi = dpi,
width = width,
height = height,
layout = NULL)
# Common  societal variables against 24 and below suicides.  Stock variables first and then divorced
var_models(final_data_3,
c('apple_station', 'atandt_station', 'verizon_station', 'divorced_station'),
out_months = out_months,
response = 'suicide24_sa_station',
runs=runs,
against_self=T,
clean=clean_names,
theme=main_theme,
n_row = 1,
title = 'Response of Suicides Per Thousand Adolescents to Various Shocks',
file_name = 'age24commonSocietal_VAR.png',
dpi = dpi,
width = width,
height = height,
layout = NULL)
# Common economic variables against 24 and below suicides
var_models(final_data_3,
c('unemp_station', 'savings_station'),
out_months = out_months,
response = 'suicide24_sa_station',
runs=runs,
against_self=T,
clean=clean_names,
theme=main_theme,
n_row=1,
title = 'Response of Suicides Per Thousand Adolescents to Various Shocks',
file_name = 'age24commonEconomic_VAR.png',
dpi = dpi,
width = width,
height = height,
layout = NULL)
# All variables for 25 and Above.  Listed least endogenous to most endogenous
height <- 7
width <- 11.5
layout <- rbind(c(1,2,3), c(4,5,6), c(NA,7,NA))
var_models(final_data_3,
c('unemp_station','savings_station','apple_station','divorced_station','gen24_station','ment24_sa_station'),
out_months = out_months,
response = 'suicide24_sa_station',
runs=runs,
against_self=T,
clean=clean_names,
theme=main_theme,
n_row=3,
title = 'Response of Suicides Per Thousand Adolescents to Various Shocks',
file_name = 'age24all_VAR.png',
dpi = dpi,
width = width,
height = height,
layout=layout)
##########################################################################
# Age 25 and Above (Adults)
# Following creates the irf for combination of variables and responses listed below
# General Health, Mental Health and Suicides for 25 and Above
height <- 5
width <- 17
var_models(final_data_3,
c('gen25_station', 'ment25_sa_station'),
out_months = out_months,
response = 'suicide25_sa_station',
runs=runs,
against_self=T,
clean=clean_names,
theme=main_theme,
n_row = 1,
title = 'Response of Suicides Per Thousand Adults to Various Shocks',
file_name = 'age25only_VAR.png',
dpi = dpi,
width = width,
height = height,
layout=NULL)
# Mental Health, General Health and Suicides for 25 and Above
var_models(final_data_3,
c('ment25_sa_station', 'gen25_station'),
out_months = out_months,
response = 'suicide25_sa_station',
runs=runs,
against_self=T,
clean=clean_names,
theme=main_theme,
n_row = 1,
title = 'Response of Suicides Per Thousand Adults to Various Shocks',
file_name = 'age25only_reverse_VAR.png',
dpi = dpi,
width = width,
height = height,
layout = NULL)
# Common  societal variables against 25 and Above suicides.  Stock variables first and then divorced
var_models(final_data_3,
c('apple_station', 'atandt_station', 'verizon_station', 'divorced_station'),
out_months = out_months,
response = 'suicide25_sa_station',
runs=runs,
against_self=T,
clean=clean_names,
theme=main_theme,
n_row = 1,
title = 'Response of Suicides Per Thousand Adults to Various Shocks',
file_name = 'age25commonSocietal_VAR.png',
dpi = dpi,
width = width,
height = height,
layout = NULL)
# Common economic variables against 25 and Above suicides
var_models(final_data_3,
c('unemp_station', 'savings_station'),
out_months = out_months,
response = 'suicide25_sa_station',
runs=runs,
against_self=T,
clean=clean_names,
theme=main_theme,
n_row=1,
title = 'Response of Suicides Per Thousand Adults to Various Shocks',
file_name = 'age25commonEconomic_VAR.png',
dpi = dpi,
width = width,
height = height,
layout = NULL)
# All variables for 25 and Above.  Listed least endogenous to most endogenous
height <- 7
width <- 11.5
layout <- rbind(c(1,2,3), c(4,5,6), c(NA,7,NA))
var_models(final_data_3,
c('unemp_station','savings_station','apple_station','divorced_station','gen25_station','ment25_sa_station'),
out_months = out_months,
response = 'suicide25_sa_station',
runs=runs,
against_self=T,
clean=clean_names,
theme=main_theme,
n_row=3,
title = 'Response of Suicides Per Thousand Adults to Various Shocks',
file_name = 'age25all_VAR.png',
dpi = dpi,
width = width,
height = height,
layout=layout)
# Fit two models.  First 24 and below suicides vs 25 and above suicides
# Don't save these variables
temp_var_plots_1 <- var_models(final_data_3,
c('suicide24_sa_station'),
out_months = out_months,
response = 'suicide25_sa_station',
runs=runs,
against_self=F,
clean=clean_names,
theme=main_theme,
n_row=1,
title = '',
file_name = '',
dpi = dpi,
width = width,
height = height,
layout=layout)
temp_var_plots_2 <- var_models(final_data_3,
c('suicide25_sa_station'),
out_months = out_months,
response = 'suicide24_sa_station',
runs=runs,
against_self=F,
clean=clean_names,
theme=main_theme,
n_row=1,
title = '',
file_name = '',
dpi = dpi,
width = width,
height = height,
layout=layout)
# Instead of graphing them as normal, graph the responses of these two models in one graph
temp_list <- c(list(temp_var_plots_1[[1]] +
scale_y_continuous(labels = percent, limits=c(-0.015,0.05)) +
labs(x='Month',y='',title=paste('Response: ','Suicides Per Thousand Adolescents',' \nShock: ','Suicides Per Thousand Adults',sep=''))),
list(temp_var_plots_2[[1]] +
scale_y_continuous(labels = percent, limits=c(-0.015,0.05)) +
labs(x='Month',y='',title=paste('Response: ','Suicides Per Thousand Adults',' \nShock: ','Suicides Per Thousand Adolescents',sep=''))))
grid <- grid.arrange(grobs=temp_list, nrow=1,top='')
ggsave(here('Plots', 'suicideOnly_VAR.png'),plot=grid,dpi=300, width = width, height = height, units='in')
###############################################################################
# Fit some ARMA models
main_theme <- theme(panel.grid = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size=16),
plot.subtitle = element_text(size=8),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8),
axis.text.x = element_text(size=8),
axis.text.y = element_text(size=8))
# max lag we will check
max_lag <- 24
ardl_aic <- c()
ardl_models <- c()
# fit an ARMA model with all values of lag for 1 to 24
for(i in 1:max_lag){
temp_ARDL <- dynlm(suicide24_sa_station ~
L(suicide24_sa_station, 1:i) +
L(gen24_station, 0:i) +
L(divorced_station, 0:i) +
L(apple_station, 0:i) +
L(unemp_station, 0:i) +
L(savings_station, 0:i) +
L(ment24_sa_station, 0:i)
, data = ts_final_data)
ardl_models <- append(ardl_models, list(temp_ARDL))
ardl_aic <- append(ardl_aic, abs(AIC(temp_ARDL)))
}
ardl_aic_tibble <- tibble(lag=1:max_lag, aic=ardl_aic)
best_model_num <- which.min(ardl_aic)
# plot the AIC for each lag length
aic_plot <- ggplot(ardl_aic_tibble, aes(x=lag, y=aic)) +
geom_line() +
geom_point() +
geom_point(data=NULL, aes(x=best_model_num, y=ardl_aic[best_model_num]), color='red', size=4) +
main_theme +
scale_x_continuous(breaks=seq(from=2, to=max_lag, by =2)) +
labs(title='AIC For Various Lags for Adolescent ADRL Models (Lowest AIC in Red)', x='Lag', y='AIC')
ggsave(here('Plots', 'age24_arma_aic.png'),plot=aic_plot,dpi=300, width = 11.5, height = 8, units='in')
# grab the best model coefficients
best_model_coef <- coef(summary(ardl_models[[best_model_num]]))
best_model_tibble <- bind_cols(var_name=rownames(best_model_coef), as_tibble(best_model_coef)) %>%
clean_names() %>%
mutate(Lag =  rep(seq(0,which.min(ardl_aic)),7))
# create a pretty table
best_model_pretty_table <- best_model_tibble %>%
mutate(pretty_var_name =  gsub('L\\(','',gsub(',.*','',var_name))) %>%
left_join(clean_names, by=c('pretty_var_name'='var_name')) %>%
mutate(clean_name = if_else(is.na(clean_name),'Intercept', clean_name)) %>%
filter(pr_t<=0.05) %>%
rename('P-value' = pr_t,
'Estimate'=estimate,
'Standard Error'=std_error,
'Test Statistic'=t_value,
'Variable Name'=clean_name) %>%
dplyr::select('Variable Name',
'Lag',
'Estimate',
'Test Statistic',
'Standard Error',
'P-value') %>%
mutate_if(is.numeric, ~round(.,4)) %>%
gt()
gt::gtsave(best_model_pretty_table,here('Plots', 'age24_arma_best_coef.png'))
# Do the same for over 25
max_lag <- 24
ardl_aic <- c()
ardl_models <- c()
for(i in 1:max_lag){
temp_ARDL <- dynlm(suicide25_sa_station ~
L(suicide25_sa_station, 1:i) +
L(gen25_station, 0:i) +
L(divorced_station, 0:i) +
L(apple_station, 0:i) +
L(unemp_station, 0:i) +
L(savings_station, 0:i) +
L(ment25_sa_station, 0:i)
, data = ts_final_data)
ardl_models <- append(ardl_models, list(temp_ARDL))
ardl_aic <- append(ardl_aic, abs(AIC(temp_ARDL)))
}
ardl_aic_tibble <- tibble(lag=1:max_lag, aic=ardl_aic)
best_model_num <- which.min(ardl_aic)
aic_plot <- ggplot(ardl_aic_tibble, aes(x=lag, y=aic)) +
geom_line() +
geom_point() +
geom_point(data=NULL, aes(x=best_model_num, y=ardl_aic[best_model_num]), color='red', size=4) +
main_theme +
scale_x_continuous(breaks=seq(from=2, to=max_lag, by =2)) +
labs(title='AIC For Various Lags for Adult ADRL Models (Lowest AIC in Red)', x='Lag', y='AIC')
ggsave(here('Plots', 'age25_arma_aic.png'),plot=aic_plot,dpi=300, width = 11.5, height = 8, units='in')
best_model_coef <- coef(summary(ardl_models[[best_model_num]]))
best_model_tibble <- bind_cols(var_name=rownames(best_model_coef), as_tibble(best_model_coef)) %>%
clean_names() %>%
mutate(Lag =  rep(seq(0,which.min(ardl_aic)),7))
best_model_pretty_table <- best_model_tibble %>%
mutate(pretty_var_name =  gsub('L\\(','',gsub(',.*','',var_name))) %>%
left_join(clean_names, by=c('pretty_var_name'='var_name')) %>%
mutate(clean_name = if_else(is.na(clean_name),'Intercept', clean_name)) %>%
filter(pr_t<=0.05) %>%
rename('P-value' = pr_t,
'Estimate'=estimate,
'Standard Error'=std_error,
'Test Statistic'=t_value,
'Variable Name'=clean_name) %>%
dplyr::select('Variable Name',
'Lag',
'Estimate',
'Test Statistic',
'Standard Error',
'P-value') %>%
mutate_if(is.numeric, ~round(.,4)) %>%
gt()
gt::gtsave(best_model_pretty_table,here('Plots', 'age25_arma_best_coef.png'))
